name: documentation

on:
  push:
    branches:
      - main

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-gradle-javadoc:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout the repo
      uses: actions/checkout@v4

    - name: Set up JDK 1.11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'corretto'

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Generate javadoc
      run: |
        ./gradlew javadoc
        rm docs/javadoc/*.zip

    - name: Upload Gradle javadoc artifact
      uses: actions/upload-artifact@v4
      with:
        name: gradle-javadoc
        path: docs/javadoc

  build-jekyll-site:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: docs

    steps:

    - name: Checkout the repo
      uses: actions/checkout@v4

    - name: Setup Ruby
      uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42
      with:
        ruby-version: '3.3'
        bundler-cache: true
        cache-version: 0
        working-directory: '${{ github.workspace }}/docs'

    - name: Build with Jekyll
      run: bundle exec jekyll build
      env:
        JEKYLL_ENV: production

    - name: Upload Jekyll site artifact
      uses: actions/upload-artifact@v4
      with:
        name: jekyll-site
        path: docs/_site

  deploy-github-pages:
    runs-on: ubuntu-latest

    needs: [build-gradle-javadoc, build-jekyll-site]

    steps:

    - name: Checkout the repo
      uses: actions/checkout@v4

    - name: Download Gradle javadoc artifact
      uses: actions/download-artifact@v4
      with:
        name: gradle-javadoc
        path: pages/javadoc

    - name: Download Jekyll site artifact
      uses: actions/download-artifact@v4
      with:
        name: jekyll-site
        path: pages/

    - name: Publish docs
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: pages/
        clean-exclude: |
          badges
          coverage

  update-documentation-badges:
    runs-on: ubuntu-latest

    needs: deploy-github-pages

    steps:

    - name: Checkout the repo
      uses: actions/checkout@v4

    - name: Generate license badge
      uses: knightdave/anybadge-action@v1.1.0
      with:
        file: docs/badges/license.svg
        label: license
        value: BSD-3-Clause
        color: yellowgreen
        template: docs/badges/template.svg
        overwrite: true

    - name: Generate passing badge
      if: success()
      uses: knightdave/anybadge-action@v1.1.0
      with:
        file: docs/badges/documentation.svg
        label: docs
        value: passing
        color: green
        template: docs/badges/template.svg
        overwrite: true

    - name: Generate failing badge
      if: failure()
      uses: knightdave/anybadge-action@v1.1.0
      with:
        file: docs/badges/documentation.svg
        label: docs
        value: failing
        color: red
        template: docs/badges/template.svg
        overwrite: true

    - name: Publish badge
      if: success() || failure()
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: docs/badges
        target-folder: badges
        clean: false
